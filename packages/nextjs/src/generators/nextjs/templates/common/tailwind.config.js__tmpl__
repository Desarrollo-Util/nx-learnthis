const {
  generateResponsiveScreens,
  generatePixelRules,
  generateRemRules,
  generateIntRules,
  flexPlugin,
  absolutePlugin,
  transitionPlugin,
  truncatePlugin,
  containerPlugin,
} = require('learnthis-tailwind-utils');

const defaultTheme = require('tailwindcss/defaultTheme');

const colors = {
  primary: {
    300: '#9EF0F0',
    DEFAULT: '#25CCCC',
    700: '#129C9C',
    800: '#006E6E',
  },
};

const standardRemValues = {
  ...generateRemRules(0, 5, 0.125),
  ...generateRemRules(5, 10, 0.25),
  ...generateRemRules(10, 25, 0.5),
  ...generateRemRules(25, 100, 1),
};

const breakpoints = {
  xs: 450,
  sm: 768,
  md: 1024,
  lg: 1280,
};

module.exports = {
  purge: ['./src/**/*.{ts,tsx}'],
  theme: {
    screens: generateResponsiveScreens(
      breakpoints.xs,
      breakpoints.sm,
      breakpoints.md
    ),
    borderWidth: generatePixelRules(0, 10),
    fontSize: generatePixelRules(10, 60),
    padding: {
      ...standardRemValues,
    },
    margin: {
      ...standardRemValues,
    },
    height: {
      ...standardRemValues,
    },
    width: {
      ...defaultTheme.width,
      ...standardRemValues,
    },
    maxHeight: {
      ...defaultTheme.maxHeight,
      ...standardRemValues,
    },
    maxWidth: {
      ...defaultTheme.maxWidth,
      ...standardRemValues,
    },
    minHeight: {
      ...defaultTheme.minHeight,
      ...standardRemValues,
    },
    minWidth: {
      ...defaultTheme.minWidth,
      ...standardRemValues,
    },
    zIndex: generateIntRules(-100, 100),
    colors,
    fill: colors,
  },
  variants: {
    extend: {
      borderOpacity: ['disabled'],
      borderWidth: ['disabled'],
      borderColor: ['responsive', 'focus', 'disabled'],
      backgroundColor: ['responsive', 'hover', 'disabled'],
      textColor: ['responsive', 'hover', 'disabled'],
      cursor: ['disabled'],
    },
  },
  plugins: [
    flexPlugin(),
    absolutePlugin(0, 5, 0.125),
    transitionPlugin(0, 2000, 125),
    truncatePlugin(20),
    containerPlugin(breakpoints),
  ],
};
